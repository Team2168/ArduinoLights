//Intake Strip Length 32 LEDS

//Intake Side Left Length 0-7

//Intake Front Left Length 8-15

//Intake Front Right Length 16-23

//Intake Side Right Length 24-32

#include "LPD8806.h"
#include "SPI.h"

//Hardware Pins
int clockPin = 3;
int dataPin1 = 11;

//Strip Length Data
int IntakeStripLength = 32;
int IntakeSideLeftPxZero = 0;
int IntakeSideLeftLength = 8;
int IntakeFrontLeftPxZero = 9;
int IntakeFrontLeftLength = 8;
int IntakeFrontRightPxZero = 17;
int IntakeFrontRightLength = 8;
int IntakeSideRightPxZero = 24;
int IntakeSideRightLength = 8;

int i = 0,
    j = 0;
       
LPD8806 strip(IntakeStripLength, dataPin1, clockPin);

void DisabledRobot();
void EnabledRobot();
void ShotReady();
void TuskPosition(int pos);
void HotGoal(int HotTarget);

int retValue = 0;

void setup() {

  strip.begin();
  for(int q = 0; q < strip.numPixels(); q++) {
  strip.setPixelColor(q, strip.Color(0,127,0));
  }
  strip.show();
  
  //Set digital pins as inputs
  pinMode(4, INPUT);
  pinMode(5, INPUT);
  pinMode(6, INPUT);
  pinMode(7, INPUT);
  pinMode(8, OUTPUT); // set pin8 as Output
  digitalWrite(8, HIGH); // write 5V to pin 8 
  
  Serial.begin(9600);  // Serial Monitor
} 

void loop() 
{
  retValue=0;
  //Read signals for cRIO
   if(digitalRead(4) == HIGH) {
     retValue = retValue + 1; 
  }  
   if(digitalRead(5) == HIGH) {
     retValue = retValue + 2;
  }  

   if(digitalRead(6) == HIGH) {
     retValue = retValue + 4;
  }  

   if(digitalRead(7) == HIGH) {
     retValue = retValue + 8;  
  }
    Serial.println(retValue);
    
  if(retValue & 0x0001) {
      EnabledRobot();
    }  
  else {
      DisabledRobot();
     
    }
   if(retValue & 0x0002) {
      ShotReady(); 
    }

   /* else if(retValue == 4)
    {
      TuskPosition(GetLEDStatus()); 
    }
    else if(retValue == 5)
    {
      TuskPosition(GetLEDStatus()); 
    }
    else if(retValue == 6)
    {
      TuskPosition(GetLEDStatus()); 
    }
    else if(retValue == 7)
    {
      HotGoal(GetLEDStatus());
    }
    else if(retValue == 8)
    {
      HotGoal(GetLEDStatus());
    }
   
   */
   
   // Serial.println("GetLEDStatus Loop");
}

void EnabledRobot() {
  for(int q = 0; q < strip.numPixels(); q++){
    strip.setPixelColor(q, strip.Color(0,127,0)); //Green
  }
 Serial.println("here");
  strip.show();
}

void DisabledRobot() {
  for(int q = 0; q < strip.numPixels(); q++){
    strip.setPixelColor(q, strip.Color(127,0,0)); //Red
  }  
  strip.show();
}

void ShotReady() {
  for(int q = 0; q < strip.numPixels(); q++){
    strip.setPixelColor(q, strip.Color(0,127,127)); //Cyan 
  }
  strip.show();
}

void TuskPosition(int pos)
{
 
  //Tusks Retracted
  if(pos == 4)
  {
     for(int q = 0; q < strip.numPixels(); q++){
        strip.setPixelColor(q, strip.Color(127,127,0)); //Ugly Green
     }      
  }
  
  //Tusks Intermediate 
  if(pos == 5)
  {
    for(int q = 0; q < strip.numPixels(); q++){
      strip.setPixelColor(q, strip.Color(0,0,127)); //Blue
    } 
  }
  
  //Tusks Extended
  if(pos == 6)
  {
    for(int q = 0; q < strip.numPixels(); q++){
      strip.setPixelColor(q, strip.Color(255,165,0)); //Orange
    }   
  }
  
}

//Auto Mode
void HotGoal(int HotTarget)
{
  //Hot Goal Left
  if(HotTarget == 7)
  {
 
    for(int q = 0; q < strip.numPixels(); q++){
      strip.setPixelColor(q, strip.Color(256,0,0));
    }
  }
  
  //Hot Goal Right
  if(HotTarget == 8)
  {
     for(int q = 0; q < strip.numPixels(); q++){
       strip.setPixelColor(q, strip.Color(0,256,0));
     }
  }
}

//  int GetLEDStatus()
 //{
 //}
